{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"01-01_Regression_Concepts.ipynb의 사본","provenance":[{"file_id":"1ERy5hpmGAaZSvtqaM28Z8TQ-aZYVmelc","timestamp":1658718762225}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 데이터 분석 개론\n","\n","x\n","- 입력 데이터\n","- 우리가 아는 값\n","- 독립변수\n","\n","y\n","- 출력 데이터\n","- 우리가 예측하려는 값\n","- 종속변수\n","- y = 레이블(Label) = Target Value 다 같은 용어\n","\n","\n"],"metadata":{"id":"TW5Mo1OJG_wV"}},{"cell_type":"markdown","source":["# 회귀문제\n","\n","회귀모델 Regression\n","- y값의 형태가 연속적인 숫자의 형태일 때\n","- 정수, 실수, 온도, 키, 나이"],"metadata":{"id":"sLD1AbndHJ1s"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"bNAJBzoGG48U"},"outputs":[],"source":["x = 1\n","y = 2\n","\n","x = 2\n","y = 4\n","\n","x = 3\n","y = 6"]},{"cell_type":"code","source":["def prediction_y(x):\n","    pred_y = x * 2\n","    return pred_y"],"metadata":{"id":"sVmNyVuAHKw-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction_y(51)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q0buGBE_HLS9","executionInfo":{"status":"ok","timestamp":1658455807281,"user_tz":-540,"elapsed":318,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"ac2ab220-8273-4593-b87a-9519ab58b0e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["102"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## 예제1\n","\n","x: 학생번호  \n","y: 키 (cm)\n","\n","학생번호를 입력받았을때 키를 예측하는 모델 만들기"],"metadata":{"id":"cYqP8Tq5HNuF"}},{"cell_type":"code","source":["x = [1, 2, 3, 4, 5, 6, 8, 9]\n","y = [150.0, 150.5, 151.0, 151.5, 152.0, 152.5, 153.5, 154.0]"],"metadata":{"id":"-pLnBf73HL_f"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(x))\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oPcpySYoHRlG","executionInfo":{"status":"ok","timestamp":1658455871878,"user_tz":-540,"elapsed":7,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"8fc8ee34-8485-4b06-c4c7-50b41523027b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","[1, 2, 3, 4, 5, 6, 8, 9]\n"]}]},{"cell_type":"code","source":["print(len(y))\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V3146eIkHRjS","executionInfo":{"status":"ok","timestamp":1658455884529,"user_tz":-540,"elapsed":295,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"a89a7149-118b-4c26-f49d-bd1714a63ca5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","[150.0, 150.5, 151.0, 151.5, 152.0, 152.5, 153.5, 154.0]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(x, y, marker='o')\n","plt.grid(True, linestyle='--')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"z1kzb3tlHRhU","executionInfo":{"status":"ok","timestamp":1658455891464,"user_tz":-540,"elapsed":375,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"53e12789-ea66-48c9-ffba-07704aa98afc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def prediction_y(x):\n","    pred_y = 150 + 0.5 * (x - 1)\n","    return pred_y"],"metadata":{"id":"Er-SUZWGHRfT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction_y(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-V_59YyyrpyN","executionInfo":{"status":"ok","timestamp":1658456049173,"user_tz":-540,"elapsed":317,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"2377f78c-615c-489c-bc3f-bc7dac542be0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["153.0"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["## 예제2\n","\n","X\n","- 독립변수는 여러개 주어질 수 있다\n","\n","y\n","- 종속변수\n","- 레이블(Label)\n","- Target Value\n","- 우리가 예측하려는 값\n"],"metadata":{"id":"TeFSre8uHVMz"}},{"cell_type":"markdown","source":["x1: 학생번호  \n","x2: 부모님 키가 충분히 크면 'h', 작으면 'l'  \n","y: 키 (cm)\n","\n","x1, x2를 입력받았을때 y를 예측하는 모델 만들기"],"metadata":{"id":"H-KF88HjHXH1"}},{"cell_type":"code","source":["x1 = [1, 2, 3, 4, 5, 6, 8, 9]\n","x2 = ['h', 'l', 'h', 'l', 'h', 'l', 'l', 'h']\n","y = [155.0, 145.5, 156.0, 146.5, 157.0, 147.5, 148.5, 159.0]"],"metadata":{"id":"9Y6-12oRHRda"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(x1, y, marker='o')\n","plt.grid(True, linestyle='--')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"KNWRkYkYHRbY","executionInfo":{"status":"ok","timestamp":1658456165118,"user_tz":-540,"elapsed":379,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"79c755bb-85d2-4388-891b-ce736a50b869"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","sns.boxplot(x2, y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"EFEBdKN3HRZO","executionInfo":{"status":"ok","timestamp":1656332596653,"user_tz":-540,"elapsed":1071,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"1801ebde-c0b7-4144-8a75-f083a5440b20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f28f856aa50>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAPDElEQVR4nO3db2xdd33H8feHBEpKxyiKKcWlc6kLbB3DgquyB0xEoJWq2sQqNokyiQlNSifRKA+YyuABzTQJaYOSRS5USkfI/kidpolpf8hgj6ZMiIk5JU0TyjaPpllMaBy6DdKGlibfPci1MOamdq7tHOfn90u6iu/vnHvuR5b1yU+/e885qSokSW15UdcBJEkrz3KXpAZZ7pLUIMtdkhpkuUtSgzZ2HQBg8+bNNTY21nUMSbqsHDhw4FRVjQzatibKfWxsjKmpqa5jSNJlJckTF9rmsowkNchyl6QGWe6S1CDLXZIaZLlLUoMsd0lqkOUuSQ1aE99zb8Xk5CTT09OdZpiZmQFgdHS00xwA4+PjbNu2resY0rpkuTfmzJkzXUeQtAZY7itoLcxSt2/fDsCuXbs6TiKpS665S1KDLHdJapDlLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhpkuUtSgyx3SWrQouWeZE+Sk0kOzxvbkWQmycH+4/b++IuT/GmSR5M8luSjqxlekjTYUmbue4HbBozvrKqJ/mNff+w3gCuq6k3AW4G7koytRFBJ0tItWu5VtR94aonHK+BlSTYCm4DngO8NH0+SNIzlrLnfneRQf9nm6v7YXwNPAyeAY8CnqmrgfwxJtiaZSjI1Ozu7jBiSpIWGLfcHgBuBCc4X+X398VuAs8BrgBuADyd53aADVNXuqupVVW9kZGTIGJKkQYYq96p6sqrOVtU54EHOlzrA+4EvVdUPq+ok8BWgtzJRJUlLNVS5J7l23tM7gLlv0hwD3tnf52XALwLfXE5ASdLFW/ROTEkeArYAm5McB+4FtiSZ4PwHqEeBu/q7fwb4fJIjQIDPV9WhVcgtSXoBi5Z7Vd05YPhzF9j3NOe/DilJ6lAT91CdnJxkenq66xhrwtzvYe5equvd+Pj4mri3rXSpNVHu09PTHDz8GGevfGXXUTr3oucKgAPferLjJN3b8MxST8+Q2tNEuQOcvfKVnHnj7V3H0Bqy6Zv7Ft9JapQXDpOkBlnuktQgy12SGmS5S1KDLHdJapDlLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhpkuUtSg5q4cNjMzAwbnvk/LxSlH7Phme8yM/N81zGkTjhzl6QGNTFzHx0d5TvPbvSSv/oxm765j9HRa7qOIXXCmbskNchyl6QGLVruSfYkOZnk8LyxHUlmkhzsP26ft+0Xknw1yZEkjyZ56WqFlyQNtpSZ+17gtgHjO6tqov/YB5BkI/AXwO9U1c3AFuCHK5RVkrREi5Z7Ve0Hlnqn4VuBQ1X1SP+1362qs8vIJ0kawnLW3O9Ocqi/bHN1f+z1QCX5cpKHk9xzoRcn2ZpkKsnU7OzsMmJIkhYattwfAG4EJoATwH398Y3A24Hf7P97R5J3DTpAVe2uql5V9UZGRoaMIUkaZKhyr6onq+psVZ0DHgRu6W86DuyvqlNV9QywD3jLykSVJC3VUCcxJbm2qk70n94BzH2T5svAPUmuBJ4D3gHsXHbKJdjwzFNefgB40Q++B8C5l7684yTd2/DMU4AnMWl9WrTckzzE+W+9bE5yHLgX2JJkAijgKHAXQFX9T5JPA//W37avqr64OtF/ZHx8fLXf4rIxPf19AMZfZ6nBNf5taN1KVXWdgV6vV1NTU13HaML27dsB2LVrV8dJJK22JAeqqjdom2eoSlKDLHdJapDlLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhrUxD1U14rJyUmmp6c7zTD3/nMnM3VpfHycbdu2dR1DWpcs98Zs2rSp6wiS1gDLfQU5S5W0VrjmLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhpkuUtSgyx3SWqQ5S5JDVq03JPsSXIyyeF5YzuSzCQ52H/cvuA11yc5neR3VyO0JOmFLWXmvhe4bcD4zqqa6D/2Ldj2aeAflxtOkjScRa8tU1X7k4wt9YBJfg14HHh6+FiSpOVYzpr73UkO9ZdtrgZIchXwEeD3F3txkq1JppJMzc7OLiOGJGmhYcv9AeBGYAI4AdzXH9/B+eWa04sdoKp2V1WvqnojIyNDxpAkDTLUJX+r6sm5n5M8CPxD/+nbgF9P8kfAK4BzSX5QVfcvO6kkacmGKvck11bVif7TO4DDAFX1S/P22QGcttgl6dJbtNyTPARsATYnOQ7cC2xJMgEUcBS4axUzSpIu0lK+LXPngOHPLeF1O4YJJElaPs9QlaQGWe6S1CDLXZIaZLlLUoMsd0lqkOUuSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGmS5S1KDLHdJapDlLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhpkuUtSgyx3SWrQouWeZE+Sk0kOzxvbkWQmycH+4/b++C8nOZDk0f6/71zN8JKkwZYyc98L3DZgfGdVTfQf+/pjp4Bfrao3Ab8F/PnKxJQkXYyNi+1QVfuTjC3lYFX19XlPjwCbklxRVc8OF0+SNIzlrLnfneRQf9nm6gHb3ws8fKFiT7I1yVSSqdnZ2WXEkCQtNGy5PwDcCEwAJ4D75m9McjPwh8BdFzpAVe2uql5V9UZGRoaMIUkaZKhyr6onq+psVZ0DHgRumduW5Drgb4APVNV/rUxMSdLFGKrck1w77+kdwOH++CuALwK/V1VfWX48SdIwFv1ANclDwBZgc5LjwL3AliQTQAFH+dHyy93AOPDxJB/vj91aVSdXOLck6QWkqrrOQK/Xq6mpqa5jSNJlJcmBquoN2uYZqpLUIMtdkhpkuUtSgyx3SWqQ5S5JDbLcJalBlrskNchyl6QGWe6S1CDLXZIaZLlLUoMsd0lqkOUuSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGmS5S1KDLHdJatCi5Z5kT5KTSQ7PG9uRZCbJwf7j9nnbPppkOsm/J3n3agWXJF3YUmbue4HbBozvrKqJ/mMfQJKfA94H3Nx/zWeTbFipsJKkpVm03KtqP/DUEo/3HuAvq+rZqnocmAZuWUY+SdIQlrPmfneSQ/1lm6v7Y6PAf8/b53h/7Cck2ZpkKsnU7OzsMmJIkhYattwfAG4EJoATwH0Xe4Cq2l1VvarqjYyMDBlDkjTIUOVeVU9W1dmqOgc8yI+WXmaA187b9br+mCTpEhqq3JNcO+/pHcDcN2n+DnhfkiuS3ADcBHxteRElSRdr42I7JHkI2AJsTnIcuBfYkmQCKOAocBdAVR1J8lfAN4DngQ9V1dnViS5JupBUVdcZ6PV6NTU11XUMSbqsJDlQVb1B2zxDVZIaZLlLUoMsd0lqkOUuSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGmS5S1KDLHdJapDlLkkNstwlqUGWuyQ1yHKXpAYterMOSZe/yclJpqenO80wM3P+jpujo6Od5gAYHx9n27ZtXcdYVZa7pEvizJkzXUdYVyx3aR1YC7PU7du3A7Br166Ok6wPrrlLUoMsd0lq0JLKPcmeJCeTHB6w7cNJKsnm/vOfTvL3SR5JciTJB1c6tCTphS115r4XuG3hYJLXArcCx+YNfwj4RlW9GdgC3JfkJcuLKUm6GEsq96raDzw1YNNO4B6g5u8O/FSSAFf1X/f8MnNKki7C0GvuSd4DzFTVIws23Q/8LPBt4FFge1WdG/D6rUmmkkzNzs4OG0OSNMBQ5Z7kSuBjwMcHbH43cBB4DTAB3J/k5Qt3qqrdVdWrqt7IyMgwMSRJFzDszP1G4AbgkSRHgeuAh5O8Gvgg8IU6bxp4HHjjSoSVJC3NUCcxVdWjwKvmnvcLvldVp5IcA94F/EuSa4A3AN9agazSZWctnPa/Vsz9HuZOZlrvVvsSCEsq9yQPcf6bL5uTHAfurarPXWD3PwD2JnkUCPCRqjq1EmGly8309DT/eeTrXH/V2a6jdO4lPzy/UPDsE1MdJ+nesdMbVv09llTuVXXnItvH5v38bc5/PVIScP1VZ/nYW77XdQytIZ94+Cc+hlxxnqEqSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGmS5S1KDLHdJapD3UJVW0czMDE9/f8MlOWlFl48nvr+Bl83MrOp7OHOXpAY5c5dW0ejoKM8+f8LLD+jHfOLhl3PF6Oiqvoczd0lqkOUuSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGmS5S1KDPIlJWmXHTnv5AYAnnzk/l7zmynMdJ+nesdMbuGmV32PRck+yB/gV4GRV/fyCbR8GPgWMVNWp/tgW4I+BFwOnquodKx1aulyMj493HWHNeG56GoArfsbfyU2s/t/GUmbue4H7gT+bP5jktcCtwLF5Y68APgvcVlXHkrxq5aJKl59t27Z1HWHN2L59OwC7du3qOMn6sOiae1XtB54asGkncA9Q88beD3yhqo71X3tyJUJKki7OUB+oJnkPMFNVjyzY9Hrg6iT/nORAkg8sO6Ek6aJd9AeqSa4EPsb5JZlBx3sr8C5gE/DVJP9aVf8x4Dhbga0A119//cXGkCS9gGFm7jcCNwCPJDkKXAc8nOTVwHHgy1X1dP8D1v3AmwcdpKp2V1WvqnojIyPDpZckDXTR5V5Vj1bVq6pqrKrGOF/ob6mq7wB/C7w9ycb+DP9twGMrmliStKhFyz3JQ8BXgTckOZ7kty+0b1U9BnwJOAR8DfiTqjq8UmElSUuz6Jp7Vd25yPaxBc8/CXxyebEkScvh5QckqUFefkBaByYnJ5nunyHalbn3nzuZqUvj4+PNn2BmuUu6JDZt2tR1hHXFcpfWgdZnqfpJrrlLUoMsd0lqkOUuSQ2y3CWpQZa7JDXIcpekBlnuktQgy12SGpSqWnyv1Q6RzAJPdJ2jIZuBU12HkAbwb3Nl/UxVDbwhxpood62sJFNV1es6h7SQf5uXjssyktQgy12SGmS5t2l31wGkC/Bv8xJxzV2SGuTMXZIaZLlLUoMs94YkGUtyuOsc0oUkOd11hvXCcpekBlnu7dmQ5MEkR5L8UxJvXCmtQ5Z7e24CPlNVNwP/C7y34zySOmC5t+fxqjrY//kAMNZhFkkdsdzb8+y8n88CG7sKIqk7lrskNchyl6QGefkBSWqQM3dJapDlLkkNstwlqUGWuyQ1yHKXpAZZ7pLUIMtdkhr0/yiQ3eW+8w6WAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def prediction_y(x1, x2):\n","    pred_y = 150 + 0.5 * (x1 - 1)\n","    pred_y = pred_y + 5 if x2 == 'h' else pred_y - 5\n","    return pred_y"],"metadata":{"id":"ECWwIUxjHZmm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction_y(1, 'h')  # 155"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iNEieG87s6km","executionInfo":{"status":"ok","timestamp":1658456376477,"user_tz":-540,"elapsed":7,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"fbf4a543-9271-4eda-db5f-40be70ebe227"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["155.0"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["prediction_y(7, 'h')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"idSIO25FHZkp","executionInfo":{"status":"ok","timestamp":1658456388790,"user_tz":-540,"elapsed":299,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"4897c79a-f135-4a75-bb61-0f4f4ce3d2ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["158.0"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["prediction_y(10, 'l')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0uDNPsFjHZik","executionInfo":{"status":"ok","timestamp":1658456409931,"user_tz":-540,"elapsed":276,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"852b9ebd-b9fe-4ed3-a2d3-a9d8e09cdaa5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["149.5"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["사람이 직접 계산하는 방법\n","Heuristic Method"],"metadata":{"id":"yD2eUNyStKMy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 머신러닝 회귀모델: 예제1"],"metadata":{"id":"kzyEMJSQHd3H"}},{"cell_type":"markdown","source":["## 모델에 필요한 데이터\n","\n","우리가 가지고 있고 알고 있는 데이터\n","- 모델 학습에 사용\n","\n","우리가 모르고, 예측을 하려는 데이터\n","- 학습된 모델에 입력값을 넣어 예측\n"],"metadata":{"id":"-bFIoHDoHfAe"}},{"cell_type":"markdown","source":["모델이 얼마나 잘 만들어졌는지 평가(Test)도 해야함\n","\n","우리가 가지고 있고 알고 있는 데이터\n","- 일부는 모델 학습에 사용\n","  - 학습 데이터 (Train Data)\n","- 일부는 모델 평가에 사용\n","  - 테스트 데이터 (Test Data)"],"metadata":{"id":"x0XnFsfcHhMv"}},{"cell_type":"code","source":["%%writefile simple_regression.csv\n","x,y\n","1,150.0\n","2,150.5\n","3,151.0\n","4,151.5\n","5,152.0\n","6,152.5\n","8,153.5\n","9,154.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FKjqFIMTHZgl","executionInfo":{"status":"ok","timestamp":1658456931849,"user_tz":-540,"elapsed":494,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"2fb99fd2-8ce1-4841-e933-86c9fd072461"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing simple_regression.csv\n"]}]},{"cell_type":"code","source":["!cat simple_regression.csv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_fuSEY18HZeh","executionInfo":{"status":"ok","timestamp":1658456980810,"user_tz":-540,"elapsed":315,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"f0a9546c-7701-4122-a9e8-a48540017409"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x,y\n","1,150.0\n","2,150.5\n","3,151.0\n","4,151.5\n","5,152.0\n","6,152.5\n","8,153.5\n","9,154.0"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv(\"simple_regression.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JVyYXU4wHZcY","executionInfo":{"status":"ok","timestamp":1658456997130,"user_tz":-540,"elapsed":420,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"4cb912c2-a032-4659-c8b1-e5a5201e5035"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x      y\n","0  1  150.0\n","1  2  150.5\n","2  3  151.0\n","3  4  151.5\n","4  5  152.0\n","5  6  152.5\n","6  8  153.5\n","7  9  154.0"],"text/html":["\n","  <div id=\"df-a7fc9118-1b15-4b86-8ac5-1d53ed78d0e2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>150.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>150.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>151.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>152.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>152.5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>153.5</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>154.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7fc9118-1b15-4b86-8ac5-1d53ed78d0e2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a7fc9118-1b15-4b86-8ac5-1d53ed78d0e2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a7fc9118-1b15-4b86-8ac5-1d53ed78d0e2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df['x']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Hc1E0DSHZaM","executionInfo":{"status":"ok","timestamp":1658457059102,"user_tz":-540,"elapsed":313,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"7b5c1337-6707-4640-88b5-d6435345a76b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1\n","1    2\n","2    3\n","3    4\n","4    5\n","5    6\n","6    8\n","7    9\n","Name: x, dtype: int64"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df['y']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P_7s8VZlHk3V","executionInfo":{"status":"ok","timestamp":1658457061176,"user_tz":-540,"elapsed":325,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"f2f33c55-ac7e-4386-cbcf-a6dfed66523b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    150.0\n","1    150.5\n","2    151.0\n","3    151.5\n","4    152.0\n","5    152.5\n","6    153.5\n","7    154.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["## 모델 입력 데이터"],"metadata":{"id":"9tWb-n5UHmjC"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","train_X, test_X, train_y, test_y = train_test_split(df['x'], df['y'], test_size=0.2, random_state=43) # train_test_split 함수는 전체 데이터셋 배열을 받아서 랜덤하게 훈련/테스트 데이터 셋으로 분리해주는 함수"],"metadata":{"id":"SBZdPXFnHll9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"BbJl66LjHoHW","executionInfo":{"status":"ok","timestamp":1658457101811,"user_tz":-540,"elapsed":310,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"7729ac6d-22c8-46aa-e574-03de4070aaee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x      y\n","0  1  150.0\n","1  2  150.5\n","2  3  151.0\n","3  4  151.5\n","4  5  152.0\n","5  6  152.5\n","6  8  153.5\n","7  9  154.0"],"text/html":["\n","  <div id=\"df-3a50af90-a730-49fe-866c-ea68e4808512\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>150.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>150.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>151.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>152.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>152.5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>153.5</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>154.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a50af90-a730-49fe-866c-ea68e4808512')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3a50af90-a730-49fe-866c-ea68e4808512 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3a50af90-a730-49fe-866c-ea68e4808512');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["train_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CT2xqXInHoTN","executionInfo":{"status":"ok","timestamp":1658457103916,"user_tz":-540,"elapsed":6,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"f285d6f9-37e6-4a92-8f7e-8e09380795c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5    6\n","6    8\n","2    3\n","1    2\n","0    1\n","4    5\n","Name: x, dtype: int64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["train_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VOQihFy1HqwN","executionInfo":{"status":"ok","timestamp":1658457105932,"user_tz":-540,"elapsed":4,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"5fc484d9-7460-417b-b6df-9f42a3449bbf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5    152.5\n","6    153.5\n","2    151.0\n","1    150.5\n","0    150.0\n","4    152.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["test_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"acQFSyZqHquP","executionInfo":{"status":"ok","timestamp":1658457127355,"user_tz":-540,"elapsed":310,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"2007ac3c-28f5-49d5-8159-f3efa05e3d14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3    4\n","7    9\n","Name: x, dtype: int64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["test_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7vQ9wSOSHqsI","executionInfo":{"status":"ok","timestamp":1658457127855,"user_tz":-540,"elapsed":4,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"9f9e136a-b6d6-45c6-b0e2-846a33a7d0bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3    151.5\n","7    154.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["import numpy as np\n","train_X = np.array(train_X)\n","train_X = np.reshape(train_X, (-1, 1))\n","test_X = np.array(test_X)\n","test_X = np.reshape(test_X, (-1, 1))"],"metadata":{"id":"2vrjhy1UHqqS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UuckID6Xv9gc","executionInfo":{"status":"ok","timestamp":1658457155959,"user_tz":-540,"elapsed":278,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"48fd37b1-25b9-4f02-8441-26cb9075a50f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[6],\n","       [8],\n","       [3],\n","       [2],\n","       [1],\n","       [5]])"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["## XGB 모델 학습"],"metadata":{"id":"QXnbTIGiHvbH"}},{"cell_type":"code","source":["from xgboost import XGBRegressor\n","\n","model_xgb = XGBRegressor()\n","model_xgb.fit(train_X, train_y) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wq59NZPvHqoZ","executionInfo":{"status":"ok","timestamp":1658457205220,"user_tz":-540,"elapsed":290,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"fb753ce0-6779-4c70-ab4c-96303a030b83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[02:33:24] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\n"]},{"output_type":"execute_result","data":{"text/plain":["XGBRegressor()"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["## XGB 모델 평가"],"metadata":{"id":"O9mWK3yvHyBy"}},{"cell_type":"code","source":["pred_y_xgb = model_xgb.predict(test_X)\n","pred_y_xgb"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YtUp2wObHqmY","executionInfo":{"status":"ok","timestamp":1658457245177,"user_tz":-540,"elapsed":313,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"78cea7d0-0062-4ccd-e42f-ee6e3416bbe2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([151.97287, 153.23633], dtype=float32)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["test_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GUw7R2euwUzg","executionInfo":{"status":"ok","timestamp":1658457253874,"user_tz":-540,"elapsed":439,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"d2a9d618-f85f-490f-ab55-f6d5af4de8c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[4],\n","       [9]])"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["test_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qxpf-rS7wWSb","executionInfo":{"status":"ok","timestamp":1658457259811,"user_tz":-540,"elapsed":292,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"64009c14-7296-4943-d0c6-67272648edd6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3    151.5\n","7    154.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["(151.5 - 151.97287) ** 2  #오차"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"caYtczl6wXxJ","executionInfo":{"status":"ok","timestamp":1658457357814,"user_tz":-540,"elapsed":304,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"0925d83a-6e9b-426d-8253-dcfc70d820af"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.22360603690000033"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["(154 - 153.23633) ** 2  #오차"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NcoSnwJ-wjF0","executionInfo":{"status":"ok","timestamp":1658457362930,"user_tz":-540,"elapsed":297,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"a3893091-3295-4584-a025-bd28d492a7e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5831918688999855"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["회귀 모델을 평가하는 방법\n","- Mean Squared Error (MSE)\n","  \n","  이상치에 민감하게 반응하여 학습하기 때문에, 손실 함수가 이상치에 의해 발생한 오차로부터 비교적 많은 영향을 받는다.\n","  오차값에 제곱을 취하기 때문에 오차가 0과 1 사이인 경우에, MSE에서 그 오차는 본래보다 더 작게 반영되고, 오차가 1보다 클 때는 본래보다 더 크게 반영된다.\n","- Root Mean Squared Error (RMSE)\n","  \n","  MSE 보다 이상치에 덜 민감하다. 이 RMSE은 이상치에 대한 민감도가 MSE와 MAE 사이에 있기 때문에, 이상치를 적절히 잘 다룬다고 간주되는 경향이 있다."],"metadata":{"id":"JxfbUmCfH2Tv"}},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","\n","mse = mean_squared_error(test_y, pred_y_xgb)\n","mse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Go8WG2i2HqkW","executionInfo":{"status":"ok","timestamp":1658457492826,"user_tz":-540,"elapsed":315,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"95ac8f25-37a0-4b21-829e-4aebd0cb4fa2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.40340032475069165"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["rmse = np.sqrt(mse)\n","rmse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uu7EsPguHqiR","executionInfo":{"status":"ok","timestamp":1658457514952,"user_tz":-540,"elapsed":300,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"d916cba5-3b87-4dd7-8a4d-4c7aef083026"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6351380359817003"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["# validation 으로 모델 성능 올리기\n","\n","우리가 가지고 있고 알고 있는 데이터\n","- 모델 학습에 사용\n","\n","우리가 모르고, 예측을 하려는 데이터\n","- 학습된 모델에 입력값을 넣어 예측\n"],"metadata":{"id":"o8RjOCamIBVZ"}},{"cell_type":"markdown","source":["모델이 얼마나 잘 만들어졌는지 평가(Test)도 해야함\n","\n","우리가 가지고 있고 알고 있는 데이터\n","- 일부는 모델 학습에 사용\n","  - 학습 데이터 (Train Data)\n","  - 벨리데이션 데이터 (Validation Data)\n","\n","      학습이 이미 완료된 모델을 검증하기 위한 데이터셋 \n","\n","      학습이 된 여러 가지 모델 중 가장 좋은 하나의 모델을 고르기 위한 데이터셋 \n","\n","      ​하지만 Validation 데이터 자체가 학습에 직접적으로 관여하는 것은 아님 \n","      \n","      일부는 모델 평가에 사용\n","  - 테스트 데이터 (Test Data)\n","\n","\n","  \" Train으로 학습하고 Validation으로 검증하고 Test로 최종 성능을 평가한다 \" \n","\n"],"metadata":{"id":"SQ_QbpZ5IDnr"}},{"cell_type":"markdown","source":["# 머신러닝 회귀모델: 예제2"],"metadata":{"id":"bdfbKowTIFVj"}},{"cell_type":"markdown","source":["## 모델에 필요한 데이터"],"metadata":{"id":"lrbVXL_qIGwf"}},{"cell_type":"code","source":["%%writefile simple_regression2.csv\n","x1,x2,y\n","1,h,150.0\n","2,l,150.5\n","3,h,151.0\n","4,l,151.5\n","5,h,152.0\n","6,l,152.5\n","8,l,153.5\n","9,h,154.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ty1u9RPHqgK","executionInfo":{"status":"ok","timestamp":1658457904333,"user_tz":-540,"elapsed":288,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"3b766835-479d-4386-a099-5ba10319b1a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting simple_regression2.csv\n"]}]},{"cell_type":"markdown","source":["원본데이터\n","Raw Data"],"metadata":{"id":"hZy6b-mQy1-4"}},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv(\"simple_regression2.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"c2zcDAzSHp_d","executionInfo":{"status":"ok","timestamp":1658457910961,"user_tz":-540,"elapsed":294,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"165f2178-6739-4906-eb5a-7f7c06c703f9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1 x2      y\n","0   1  h  150.0\n","1   2  l  150.5\n","2   3  h  151.0\n","3   4  l  151.5\n","4   5  h  152.0\n","5   6  l  152.5\n","6   8  l  153.5\n","7   9  h  154.0"],"text/html":["\n","  <div id=\"df-eac588e2-cfcb-44c1-8e8a-4e61d6c7a047\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>h</td>\n","      <td>150.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>l</td>\n","      <td>150.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>h</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>l</td>\n","      <td>151.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>h</td>\n","      <td>152.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>l</td>\n","      <td>152.5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>l</td>\n","      <td>153.5</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>h</td>\n","      <td>154.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eac588e2-cfcb-44c1-8e8a-4e61d6c7a047')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eac588e2-cfcb-44c1-8e8a-4e61d6c7a047 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eac588e2-cfcb-44c1-8e8a-4e61d6c7a047');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["## 모델 입력 데이터"],"metadata":{"id":"Bi3TtlvCIJKL"}},{"cell_type":"code","source":["def to_discrete(x):\n","    return round(x)\n","\n","df['y'] = df['y'].apply(lambda x:  to_discrete(x))\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"aOkRS_8F5omX","executionInfo":{"status":"ok","timestamp":1658459792032,"user_tz":-540,"elapsed":313,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"15001c16-d14e-4fb9-f856-ee25a7522897"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2    y\n","0   1   0  150\n","1   2   1  150\n","2   3   0  151\n","3   4   1  152\n","4   5   0  152\n","5   6   1  152\n","6   8   1  154\n","7   9   0  154"],"text/html":["\n","  <div id=\"df-ca5e0274-e454-4669-ba20-19b6dd9283aa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>151</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>152</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>152</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>152</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>154</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>154</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca5e0274-e454-4669-ba20-19b6dd9283aa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ca5e0274-e454-4669-ba20-19b6dd9283aa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ca5e0274-e454-4669-ba20-19b6dd9283aa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["df['y'].unique()"],"metadata":{"id":"CYomQQxI6GXU","executionInfo":{"status":"ok","timestamp":1658459816139,"user_tz":-540,"elapsed":298,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"b2a03443-337f-4336-bed3-7e648c492854","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([150, 151, 152, 154])"]},"metadata":{},"execution_count":76}]},{"cell_type":"markdown","source":["integer encoding"],"metadata":{"id":"e3WubvSHx0BG"}},{"cell_type":"code","source":["df['x2'] = df['x2'].replace({'h': 0, 'l':1 })\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"__x76PW_IIId","executionInfo":{"status":"ok","timestamp":1658457912810,"user_tz":-540,"elapsed":14,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"92cf8395-e99d-4f7b-9a6b-d059148679ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2      y\n","0   1   0  150.0\n","1   2   1  150.5\n","2   3   0  151.0\n","3   4   1  151.5\n","4   5   0  152.0\n","5   6   1  152.5\n","6   8   1  153.5\n","7   9   0  154.0"],"text/html":["\n","  <div id=\"df-0fe5b53f-d9d7-4254-b19d-e048e42111f1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>150.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>151.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>152.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>152.5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>153.5</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>154.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fe5b53f-d9d7-4254-b19d-e048e42111f1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0fe5b53f-d9d7-4254-b19d-e048e42111f1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0fe5b53f-d9d7-4254-b19d-e048e42111f1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["관행 (convention)"],"metadata":{"id":"3OQ-Bpx0x_I2"}},{"cell_type":"code","source":["X_cols = ['x1', 'x2']\n","y_col = 'y'"],"metadata":{"id":"0uRa9a7EIKiN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","trval_X, test_X, trval_y, test_y = train_test_split(df[X_cols], df[y_col], test_size=0.2, random_state=43) "],"metadata":{"id":"ixad-Dh0ILcu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trval_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"PsRIloleIMDd","executionInfo":{"status":"ok","timestamp":1658457915101,"user_tz":-540,"elapsed":7,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"13e53dc0-edb5-4d24-94f0-f46dccd7e482"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2\n","5   6   1\n","6   8   1\n","2   3   0\n","1   2   1\n","0   1   0\n","4   5   0"],"text/html":["\n","  <div id=\"df-fb76c804-8e14-431e-bce8-a130c52667e3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb76c804-8e14-431e-bce8-a130c52667e3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fb76c804-8e14-431e-bce8-a130c52667e3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fb76c804-8e14-431e-bce8-a130c52667e3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["trval_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2sxxFMImINR6","executionInfo":{"status":"ok","timestamp":1658457915513,"user_tz":-540,"elapsed":7,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"02ecc8f8-6ea6-453f-df8b-cef397706d30"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5    152.5\n","6    153.5\n","2    151.0\n","1    150.5\n","0    150.0\n","4    152.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["test_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"ou3SGeYOINPu","executionInfo":{"status":"ok","timestamp":1658457916106,"user_tz":-540,"elapsed":8,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"79837f5e-0a64-471d-e54e-8dac4d2ccf19"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2\n","3   4   1\n","7   9   0"],"text/html":["\n","  <div id=\"df-04b5f84d-a494-4149-9e26-f6e66d052483\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04b5f84d-a494-4149-9e26-f6e66d052483')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04b5f84d-a494-4149-9e26-f6e66d052483 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04b5f84d-a494-4149-9e26-f6e66d052483');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["test_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bm43x72TINN0","executionInfo":{"status":"ok","timestamp":1658457916513,"user_tz":-540,"elapsed":13,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"23bcdc1a-f530-4fef-b5ae-bfcaf1663347"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3    151.5\n","7    154.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","train_X, valid_X, train_y, valid_y = train_test_split(trval_X, trval_y, test_size=0.2, random_state=43) "],"metadata":{"id":"fUmgowNwINL0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Tqhk6o7BINJt","executionInfo":{"status":"ok","timestamp":1658457917669,"user_tz":-540,"elapsed":11,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"bd331cc3-ab33-42d9-e8c5-27af7e088688"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2\n","6   8   1\n","1   2   1\n","5   6   1\n","0   1   0"],"text/html":["\n","  <div id=\"df-755bd6e0-f6b2-468f-96a4-5f6dcab02dc7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-755bd6e0-f6b2-468f-96a4-5f6dcab02dc7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-755bd6e0-f6b2-468f-96a4-5f6dcab02dc7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-755bd6e0-f6b2-468f-96a4-5f6dcab02dc7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["train_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x42VvYzQINHn","executionInfo":{"status":"ok","timestamp":1658457918481,"user_tz":-540,"elapsed":6,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"46db3f2e-8aae-4406-c67c-a1b223c3f916"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6    153.5\n","1    150.5\n","5    152.5\n","0    150.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["valid_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"wS_IwYz0INFq","executionInfo":{"status":"ok","timestamp":1658457918788,"user_tz":-540,"elapsed":13,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"866902ff-4185-4067-a96e-434d98d6127f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x1  x2\n","4   5   0\n","2   3   0"],"text/html":["\n","  <div id=\"df-854b4350-da79-4f82-9267-f2de4d91d472\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x1</th>\n","      <th>x2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-854b4350-da79-4f82-9267-f2de4d91d472')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-854b4350-da79-4f82-9267-f2de4d91d472 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-854b4350-da79-4f82-9267-f2de4d91d472');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["valid_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wuI7zxKEINDy","executionInfo":{"status":"ok","timestamp":1658457919371,"user_tz":-540,"elapsed":8,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"b85c8dff-a509-4cd5-d414-b07561182c71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4    152.0\n","2    151.0\n","Name: y, dtype: float64"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["train_X = np.array(train_X)\n","train_y = np.array(train_y)\n","valid_X = np.array(valid_X)\n","valid_y = np.array(valid_y)\n","test_X = np.array(test_X)\n","test_y = np.array(test_y)"],"metadata":{"id":"mHf4vk3PINBk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 모델 학습"],"metadata":{"id":"mQv_mo8lIVyo"}},{"cell_type":"code","source":["from xgboost import XGBRegressor\n","\n","model_xgb = XGBRegressor()\n","model_xgb.fit(train_X, train_y, eval_set=[(valid_X, valid_y)]) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rvb4tzU-IUo2","executionInfo":{"status":"ok","timestamp":1658457921407,"user_tz":-540,"elapsed":647,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"ac79a3a6-686b-4130-d0a9-7f3790398f0a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[02:45:20] WARNING: /workspace/src/objective/regression_obj.cu:152: reg:linear is now deprecated in favor of reg:squarederror.\n","[0]\tvalidation_0-rmse:138.911\n","[1]\tvalidation_0-rmse:127.788\n","[2]\tvalidation_0-rmse:117.555\n","[3]\tvalidation_0-rmse:108.141\n","[4]\tvalidation_0-rmse:99.48\n","[5]\tvalidation_0-rmse:91.5118\n","[6]\tvalidation_0-rmse:84.1811\n","[7]\tvalidation_0-rmse:77.4368\n","[8]\tvalidation_0-rmse:71.2321\n","[9]\tvalidation_0-rmse:65.5239\n","[10]\tvalidation_0-rmse:60.2723\n","[11]\tvalidation_0-rmse:55.4408\n","[12]\tvalidation_0-rmse:50.9959\n","[13]\tvalidation_0-rmse:46.9067\n","[14]\tvalidation_0-rmse:43.1446\n","[15]\tvalidation_0-rmse:39.6835\n","[16]\tvalidation_0-rmse:36.4994\n","[17]\tvalidation_0-rmse:33.57\n","[18]\tvalidation_0-rmse:30.875\n","[19]\tvalidation_0-rmse:28.3957\n","[20]\tvalidation_0-rmse:26.1148\n","[21]\tvalidation_0-rmse:24.0164\n","[22]\tvalidation_0-rmse:22.086\n","[23]\tvalidation_0-rmse:20.31\n","[24]\tvalidation_0-rmse:18.6762\n","[25]\tvalidation_0-rmse:17.1733\n","[26]\tvalidation_0-rmse:15.7906\n","[27]\tvalidation_0-rmse:14.5187\n","[28]\tvalidation_0-rmse:13.3486\n","[29]\tvalidation_0-rmse:12.2723\n","[30]\tvalidation_0-rmse:11.2822\n","[31]\tvalidation_0-rmse:10.3715\n","[32]\tvalidation_0-rmse:9.53383\n","[33]\tvalidation_0-rmse:8.76333\n","[34]\tvalidation_0-rmse:8.05466\n","[35]\tvalidation_0-rmse:7.40289\n","[36]\tvalidation_0-rmse:6.80351\n","[37]\tvalidation_0-rmse:6.25232\n","[38]\tvalidation_0-rmse:5.74551\n","[39]\tvalidation_0-rmse:5.27954\n","[40]\tvalidation_0-rmse:4.85118\n","[41]\tvalidation_0-rmse:4.45745\n","[42]\tvalidation_0-rmse:4.09561\n","[43]\tvalidation_0-rmse:3.76313\n","[44]\tvalidation_0-rmse:3.45773\n","[45]\tvalidation_0-rmse:3.17727\n","[46]\tvalidation_0-rmse:2.91979\n","[47]\tvalidation_0-rmse:2.65836\n","[48]\tvalidation_0-rmse:2.45992\n","[49]\tvalidation_0-rmse:2.27587\n","[50]\tvalidation_0-rmse:2.10535\n","[51]\tvalidation_0-rmse:1.9476\n","[52]\tvalidation_0-rmse:1.80191\n","[53]\tvalidation_0-rmse:1.66761\n","[54]\tvalidation_0-rmse:1.54412\n","[55]\tvalidation_0-rmse:1.4309\n","[56]\tvalidation_0-rmse:1.2879\n","[57]\tvalidation_0-rmse:1.19241\n","[58]\tvalidation_0-rmse:1.10586\n","[59]\tvalidation_0-rmse:1.02786\n","[60]\tvalidation_0-rmse:0.958096\n","[61]\tvalidation_0-rmse:0.896233\n","[62]\tvalidation_0-rmse:0.841958\n","[63]\tvalidation_0-rmse:0.794949\n","[64]\tvalidation_0-rmse:0.721366\n","[65]\tvalidation_0-rmse:0.687469\n","[66]\tvalidation_0-rmse:0.65984\n","[67]\tvalidation_0-rmse:0.638002\n","[68]\tvalidation_0-rmse:0.621429\n","[69]\tvalidation_0-rmse:0.609553\n","[70]\tvalidation_0-rmse:0.594082\n","[71]\tvalidation_0-rmse:0.580362\n","[72]\tvalidation_0-rmse:0.568208\n","[73]\tvalidation_0-rmse:0.557458\n","[74]\tvalidation_0-rmse:0.547961\n","[75]\tvalidation_0-rmse:0.539579\n","[76]\tvalidation_0-rmse:0.532187\n","[77]\tvalidation_0-rmse:0.524832\n","[78]\tvalidation_0-rmse:0.518347\n","[79]\tvalidation_0-rmse:0.513252\n","[80]\tvalidation_0-rmse:0.508144\n","[81]\tvalidation_0-rmse:0.503655\n","[82]\tvalidation_0-rmse:0.499708\n","[83]\tvalidation_0-rmse:0.496245\n","[84]\tvalidation_0-rmse:0.493209\n","[85]\tvalidation_0-rmse:0.490552\n","[86]\tvalidation_0-rmse:0.488476\n","[87]\tvalidation_0-rmse:0.486405\n","[88]\tvalidation_0-rmse:0.484596\n","[89]\tvalidation_0-rmse:0.483014\n","[90]\tvalidation_0-rmse:0.481633\n","[91]\tvalidation_0-rmse:0.480425\n","[92]\tvalidation_0-rmse:0.479371\n","[93]\tvalidation_0-rmse:0.478452\n","[94]\tvalidation_0-rmse:0.477734\n","[95]\tvalidation_0-rmse:0.477023\n","[96]\tvalidation_0-rmse:0.476402\n","[97]\tvalidation_0-rmse:0.475861\n","[98]\tvalidation_0-rmse:0.475389\n","[99]\tvalidation_0-rmse:0.474977\n"]},{"output_type":"execute_result","data":{"text/plain":["XGBRegressor()"]},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["## 모델 평가"],"metadata":{"id":"azalOht3IYSF"}},{"cell_type":"code","source":["pred_y_xgb = model_xgb.predict(test_X)\n","pred_y_xgb"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_2zsucPhIWkl","executionInfo":{"status":"ok","timestamp":1658457923412,"user_tz":-540,"elapsed":4,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"2882ef22-65b0-490e-ec9e-5a9a2d7fd7cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([152.42075, 153.19662], dtype=float32)"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["mse = mean_squared_error(test_y, pred_y_xgb)\n","mse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pAaGkNJIZir","executionInfo":{"status":"ok","timestamp":1658457927330,"user_tz":-540,"elapsed":319,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"86aa15c8-215a-474d-ced6-062fe5859916"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7465923512354493"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["rmse = np.sqrt(mse)\n","rmse"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EaLwUd8NIZgt","executionInfo":{"status":"ok","timestamp":1658457928677,"user_tz":-540,"elapsed":4,"user":{"displayName":"Heegook Jun","userId":"14918135347093685311"}},"outputId":"86ff64b2-c15e-46ab-86ff-bf44dd6faa5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8640557570177109"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":[""],"metadata":{"id":"utD8XpRbIZep"},"execution_count":null,"outputs":[]}]}